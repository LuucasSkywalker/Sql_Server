Objetos do banco de dados

*Tabelas: Armazenam todas as informações;
(tabelas são estruturas que armazenam as informações
do banco de dados)

*Views: agem como uma tabela virtual ou consulta armazenada;

*Indices: recurso para recuperação rápida de informação;

*Tiggers: executa um bloco de codigo sempre que houver um insert,
updade ou delete;

*Procedures: aceitam parâmentros, blocos de codigo e retornam valores;
(são exatamente iguais a uma função JS e outros)

*Regras: determinam os valores aceitáveis a serem inseridos em uma coluna;

-----------------------------------------------**

Tipos de dados

*Cada coluna, variável, expressão ou parâmentros possuem um tipo de dados;
(exemplos: valores inteiros, valores momentários, data, hora,  expressões e etc)

*O tipo de dados especifica o tipo de informações que um objeto suporta.exemplos
"inteiros, caracteres, valores monetários, data, data e hora, binários etc".

*Os tipos de dados são organizados em: "valores númericos exatos, valores númericos
aproximados, data e hora, caracteres, caracteres unicode, binários e outros tipos de
dados;
(são as organizações mais frequentes em um banco de dados sql)

-----------------------------------------------**

Introdução a sintaxe básica do T-SQL 
**SELECT - comando select é usado para recuperar DADOS do banco de dados
ou consultar informações de um banco de dados.
* EXISTEM QUATRO PROPRIEDADES BÁSICAS DE UM COMANDO SELECT

1) Numero e atributos das colunas dos resultados;
2) Tabelas nas quais os resultados serão recuperados;
3) Condições que as linhas deverão respeitar para serem retornadas;
4) Sequencia de ordenação das linhas recuperadas;

EXEMPLO:
1-SELECT productid, Name, ListPrice (CONSULTADO 3 COLUNAS DENTRO DE UMA TABELA)
2-FROM Production.Production        (ESCOLHENDO A TABELA QUE SERÁ CONSULTADA)

3-WHERE ListPrice > $40             (ESTA CONDIÇÃO ESTÁ DIZENDO PARA TRAZER TODAS
                                     AS LINHAS DA COLUNA QUE SÃO MAIORES QUE $40)

4-ORDER BY ListPrice ASC            (ESTÁ DIZENDO PARA ORDENAR OS PREÇOS DA CONDIÇÃO
                                     WHERE SEJA TRAZIDO NA SEGUÊNCIA DO MAIOR PREÇO
                                     PARA O MENOR)

-----------------------------------------------**

TIPOS DE OPERADORES SQL

- Os operadores aritméticos executam operações matemáticas em duas expressões de um ou 
mais tipos de dados. Eles são executados da categoria de tipo de dados numéricos. 
Para obter mais informações sobre as categorias de tipo de dados, confira Convenções 
de sintaxe Transact-SQL.

**OPERADORES ARITMÉTICOS (TRANSACT-SQL)

Operador	     Significado
+ (Somar)	     Adição
- (Subtrair)	 Subtração
* (Multiplicar)	 Multiplicação
/ (dividir)	     Divisão
% (módulo)	     Retorna o resto inteiro de uma divisão. Por exemplo, 12% 5 = 2 porque
 o resto de 12 dividido por 5 é 2. Os operadores de adição (+) e de subtração (-) também
  podem ser usados para executar operações aritméticas em valores de datetime e smalldatetime.


- Aplica-se a: simSQL Server (todas as versões compatíveis)
Os operadores de comparação testam se duas expressões são iguais. Os operadores de 
comparação podem ser usados em todas as expressões, exceto em expressões dos tipos de 
dados text, ntext ou image. A tabela a seguir lista os operadores de comparação Transact-SQL.

**OPERADORES DE COMPARAÇÃO (TRANSACT-SQL)

Operador	Significado
= (Igual a)	Igual a
> (Maior que)	Maior que
< (Menor que)	Menor que
>= (Maior ou igual a)	Maior ou igual a
<= (Menor ou igual a)	Menor que ou igual a
<> (Diferente de)	É diferente de
!= (Diferente de)	Diferente de (não é padrão ISO)
!< (Não é menor que)	Não é menor que (não é padrão ISO)
!> (Não é maior que)	Não é maior que (não é padrão ISO)


- Os operadores lógicos testam a legitimidade de algumas condições. Os operadores lógicos, como 
operadores de comparação, retornam um tipo de dados Boolean com um valor TRUE, FALSE ou UNKNOWN.

**OPERADORES LÓGICOS (TRANSACT-SQL)

Operador	Significado
ALL	TRUE se tudo em um conjunto de comparações for TRUE.
AND	TRUE se as duas expressões boolianas forem TRUE.
QUALQUER	TRUE se qualquer conjunto de comparações for TRUE.
BETWEEN	TRUE se o operando estiver dentro de um intervalo.
EXISTS	TRUE se uma subconsulta tiver qualquer linha.
IN	TRUE se o operando for igual a um de uma lista de expressões.
LIKE	TRUE se o operando corresponder a um padrão.
NOT	Inverte o valor de qualquer outro operador booliano.
OR	TRUE se qualquer expressão booliana for TRUE.
SOME	TRUE se algum conjunto de comparações for TRUE.

-----------------------------------------------**

O que são funções T-SQL

* Rowset: retorna objetos que podem ser usados como tabela.
Exemplo: CONSTAINSTABLE, OPENDATASOURCE, OPENQUERY;

* AGGREGATE: trabalham em coleções, mas retornam apenas uma linha
Exemplo: AVG, SUM, COUNT, CHECKSUM_AGG;

* Ranking:  retorna o valor no ranking de cada linha do resultados
Exemplo: RANK E DENSE_RANK;

* Scalar: Operam em um valor único e retornam um valor único.
Exemplo: CREATE FUNCTION dbo.ufn_CubicVolume;

-----------------------------------------------**

Comandos controle de fluxo

*BEGIN ... END;
(comando que determina o inicio e um fim de um bloco de codigos)

*GOTO;

*IF ... ELSE;
(utilizado para determinar uma condição, igual no JS)

*RETURN;
(retorna uma procedures ou um resultado de uma função, similar ao JS)

*BREAK;
(utilizado para sair de um laço, ou um loop de repetição, igual no JS)

*CONTINUE;
(utlizado para para uma repetição, porém ele não sai do laço, ele retorna
pro inicio da função)

*WHILE;
(laço de repetição, mesma função do JS)

*WAITFOR;
(comando execultado até que determinada ação aconteça, dai execute o resto
do codigo, igual o FOR do JS)